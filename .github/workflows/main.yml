name: cicd
on:
  push:
    branches:
      - '*'
env:
  EC2_USER: 'ubuntu'
  EC2_HOST: 54.168.235.177 
  SRC_PATH: 'build/libs/*.jar'
  DEST_DIR: '/home/ubuntu'
  APP_NAME: 'sboot'
  AWS_EC2_PRIVATE_KEY: |
    -----BEGIN RSA PRIVATE KEY-----
    MIIEowIBAAKCAQEAhZdEChqsZ/zQfLx7UdfAPsFMJ58Mkg0nGTlccCNjp0nJzos7
    nbv+cElMHwfG/IpUJfhU9pmacBy4TN0nQD6uXCnNXfEdWKf8Zq+2HUBwz7Sk5tLe
    C9cX4ANTUZEmv29Y4w4UCDtYgK914GXAInENa/Wc5ObH//J8RaiArspiNv+aREpC
    t/B02Pdaf/hI0NU0DTazFlILJnBmLn6rMUvWe0/H1patV63grn03eP7EYQo0EH2F
    qXNKdVwtOSPq3YwxbZXgD8CLAHOJE+KJ9ab8oawzZRZmPO1SppojKrgivmPrvucV
    iWAdTJXnxlC1NvtbeCTPPN0fWxU1zux2kwi3FwIDAQABAoIBAAL79hEjt2Y7R40B
    yN9zKmA8gS8BZo58rLrrhR0cLUW3aEKs6ZAEexKXEJRA4DkT/f07Juq7U6/ddGCD
    MDVHMS3t4SCQGk+4sPK6Sh8tKVf6eRSO8VbiXy4p5NqVm3/7RMkNr3TfnoKBaOiy
    XTBnxhz7R531adJV4GDN+tHsw3TnCCckC5zG+u4mByCBqvrTvIJLG7WkUbDhCigu
    YICld7ILmCvQgVSV3LBGWhpzHuVz1GCCqGpbpam5A0o9CATRfd2B5GwesKKNruPN
    PrecG8QD1kjM/DVh7LzayfCzIPX2P2ojO63LI+h5/gqOB7k83/0ejeOvQf18lXBw
    b2o6agECgYEA/Q/WJQuuVJa9cVB/+R47UAEQcShGYToyXGRpKU0/62YZYFSY057Q
    Od14zpdjOzmaa51fWW5J8Ogv+Y+LtWx46gI24pMMyDMuRKp3RSrUM2szYP7L5I2V
    BoA9AWS7qvegsc51MiidHFpsnfQVu6znPs+LcrWHczjYSaCeZwZ/0SECgYEAhyRU
    28fIeORU925II4un/vihtehx5pDV/PxZ7y0lCfGqIERSSL6aSAQ+v3ksyWdPScoE
    1J8sJNpYFx2lzZlhJgVLEWte/rzHHPuUy6Mo7ZASTLFCotg9WPQV/5bvllyVhWmv
    0mlclf8eWzY9X8mfycY7G8mVB6HJs1ik0YgEqTcCgYEAsdmua8zA0Ww7aebkecVY
    dAq7bnuasvw+ppZfHgrPkHXqAbySx6+GshRHshHNSLNcJqOsfmK3jprwFJlg27mH
    ZRb3Udd9FTp7GwEe37qQ9i4yJsoLq+4hPTdlKJSOHEL6adwqm3zVpjaavYvstkB3
    KLqeS5juv/jEcUJz8P4tWGECgYBUfkusChH2O9Q/yyzBRJzplmwMvuMP4/hWrzRP
    jOs+d2EFwZGst7bgVf8hWdK9raDuIqe4hDhmZjlzYm76x+3shpyzrGz9Wewn28fh
    Ngbt2QkH+EAQbqCUkC982NK9MO+vNS/fn05q3dIN9zCSRg5oak8khXlvByGDx2Vt
    N9yqKwKBgHubNuN9zGVO+ju+yl5xh8WVZvzuaPLK80PuFBbPQ734+D041aL/AWDD
    4RsZ4CaVBjRGUkkD7bsy9/vjezoQP1m4gjMy9iOHSFOIfVA8Crf25SnBwJGuACmo
    7JqLjZ26s9O10swczPejAvpeTLGJj7IyQNYmwNPPDY9cw4hAwRqi
    -----END RSA PRIVATE KEY-----
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: fullness_ec
          POSTGRES_USER: fullness_ec
          POSTGRES_PASSWORD: fullness_ec
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Test with Gradle
        run: chmod +x gradlew # && ./gradlew test
      # - name: save test reports as artifact
      #   uses: actions/upload-artifact@v3
      #   if: always()
      #   with:
      #     name: test-reports
      #     path: build/reports/tests/test
      - name: Build with Gradle
        run: ./gradlew build -x test
      - name: save build artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: build-artifact
          path: build/libs/fullness-ec-0.0.1-SNAPSHOT.jar
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download Build Artifact
      uses: actions/download-artifact@v3
      with:
        name: build-artifact
        path: build/libs
    - name: Deploy to EC2 by SCP
      env:
        PRIVATE_KEY: ${{ env.AWS_EC2_PRIVATE_KEY }}        
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -t -o StrictHostKeyChecking=no -i private_key ${EC2_USER}@${EC2_HOST} "sudo mkdir -p ${DEST_DIR}/${APP_NAME} && sudo chmod -R 777 ${DEST_DIR}/${APP_NAME}"
        scp -i private_key build/libs/fullness-ec-0.0.1-SNAPSHOT.jar ${EC2_USER}@${EC2_HOST}:${DEST_DIR}/${APP_NAME}/app.jar
    - name: SSH EC2 Setup and Deploy
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_USER }}
        key: ${{ env.AWS_EC2_PRIVATE_KEY }}        
        envs: APP_NAME
        script: sudo systemctl restart $APP_NAME
