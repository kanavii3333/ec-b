<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="com.fullness.ec.repository.ProductRepository">
<resultMap type="Product" id="prodResult">
        <id property="productId" column="id" />
        <result property="productName" column="productName" />
        <result property="productPrice" column="productPrice" />
        <result property="imageUrl" column="imageUrl" />
        <association property="productCategory" javaType="ProductCategory">
            <id property="productCategoryId" column="productCategoryId" />
            <result property="productCategoryName" column="productCategoryName" />
        </association>
        <association property="productStock" javaType="ProductStock">
            <id property="productStockId" column="productStockId" />
            <result property="quantity" column="quantity" />
        </association>
    </resultMap>
    <select id="selectAll" resultType="Product" resultMap="prodResult">
        select 
            p.id as productId,
            p.name as productName,
            p.price as price,
            p.image_url as imageUrl 
            pc.id as productCategoryId
            pc.name as productCategoryName
            ps.id as productStockId
            ps.quantity as quantity
        from 
            product p
        join 
            product_category pc
        on
            p.product_category_id = pc.id
        join
            product_stock ps
        on  
            p.id = ps.product_id
        where
            delete_flag = 0
    </select>
    <insert id="insert" parameterType="Product">
        <selectKey keyProperty="id" resultType="Integer" order="BEFORE">
            select nextval('product_id_seq')
        </selectKey>
            insert into product_category values(#{productId}, #{productName}, #{productPrice}, #{imageUrl}, #{productCategoryId}, 0)
    </insert>
    <update id="update" parameterType="Product">
        update product set name = #{productName}, price = #{productPrice}, image_url =#{imageUrl}, category_id = #{productCategoryId} where id = #{productId}
    </update>
    <update id="updateDeleteFlag" parameterType="Product">
        update product set delete_flag = 1 where id = #{productId}
    </update>
</mapper>